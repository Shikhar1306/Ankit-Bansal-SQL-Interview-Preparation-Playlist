--Q6. Complex SQL 6 | Scenario based on join, group by and having clauses | SQL Interview Question
--https://www.youtube.com/watch?v=SfzbR69LquU&list=PLBTZqjSKn0IeKBQDjLmzisazhqQy4iGkb&index=6

/*write a query to find PersonID, Name, number of friends, sum of marks
of person who have friends with total score greater than 100. */

CREATE TABLE person (
  PersonID INT PRIMARY KEY,
  Name VARCHAR(50),
  Email VARCHAR(50),
  Score INT
);

INSERT INTO person (PersonID, Name, Email, Score)
VALUES
  (1, 'Alice', 'alice2018@hotmail.com', 88),
  (2, 'Bob', 'bob2018@hotmail.com', 11),
  (3, 'Davis', 'davis2018@hotmail.com', 27),
  (4, 'Tara', 'tara2018@hotmail.com', 45),
  (5, 'John', 'john2018@hotmail.com', 63);

CREATE TABLE friend (
  PersonID INT,
  FriendID INT,
  PRIMARY KEY (PersonID, FriendID),
  FOREIGN KEY (PersonID) REFERENCES person(PersonID),
  FOREIGN KEY (FriendID) REFERENCES person(PersonID)
);

INSERT INTO friend (PersonID, FriendID)
VALUES
  (1, 2),
  (1, 3),
  (2, 1),
  (2, 3),
  (3, 5),
  (4, 2),
  (4, 3),
  (4, 5);

select * from person;
select * from friend;

with cte as
(
	select f.PersonID, count(f.FriendID) no_of_friends, sum(p.Score) total_score
	from friend f
	inner join person p
	on f.FriendID = p.PersonID
	group by f.PersonID
	having sum(p.Score) > 100
)
select c.PersonID, p.Name, c.no_of_friends, c.total_score
from cte c
inner join person p
on c.PersonID = p.PersonID